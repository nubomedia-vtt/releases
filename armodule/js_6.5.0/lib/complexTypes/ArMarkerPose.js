/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2015 Kurento (http://kurento.org/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var inherits = require('inherits');

var kurentoClient = require('kurento-client');

var checkType = kurentoClient.checkType;
var ChecktypeError = checkType.ChecktypeError;

var ComplexType = kurentoClient.register.complexTypes.ComplexType;


/**
 * Pose doc
 *
 * @constructor module:armarkerdetector/complexTypes.ArMarkerPose
 *
 * @property {external:Integer} markerId
 *  marker id
 * @property {external:Number} matrixModelview
 *  marker modelview matrix
 */
function ArMarkerPose(arMarkerPoseDict){
  if(!(this instanceof ArMarkerPose))
    return new ArMarkerPose(arMarkerPoseDict)

  arMarkerPoseDict = arMarkerPoseDict || {}

  // Check arMarkerPoseDict has the required fields
  checkType('int', 'arMarkerPoseDict.markerId', arMarkerPoseDict.markerId, {required: true});
  checkType('float', 'arMarkerPoseDict.matrixModelview', arMarkerPoseDict.matrixModelview, {isArray: true, required: true});

  // Init parent class
  ArMarkerPose.super_.call(this, arMarkerPoseDict)

  // Set object properties
  Object.defineProperties(this, {
    markerId: {
      writable: true,
      enumerable: true,
      value: arMarkerPoseDict.markerId
    },
    matrixModelview: {
      writable: true,
      enumerable: true,
      value: arMarkerPoseDict.matrixModelview
    }
  })
}
inherits(ArMarkerPose, ComplexType)

// Private identifiers to allow re-construction of the complexType on the server
// They need to be enumerable so JSON.stringify() can access to them
Object.defineProperties(ArMarkerPose.prototype, {
  __module__: {
    enumerable: true,
    value: "armarkerdetector"
  },
  __type__: {
    enumerable: true,
    value: "ArMarkerPose"
  }
})

/**
 * Checker for {@link module:armarkerdetector/complexTypes.ArMarkerPose}
 *
 * @memberof module:armarkerdetector/complexTypes
 *
 * @param {external:String} key
 * @param {module:armarkerdetector/complexTypes.ArMarkerPose} value
 */
function checkArMarkerPose(key, value)
{
  if(!(value instanceof ArMarkerPose))
    throw ChecktypeError(key, ArMarkerPose, value);
};


module.exports = ArMarkerPose;

ArMarkerPose.check = checkArMarkerPose;
